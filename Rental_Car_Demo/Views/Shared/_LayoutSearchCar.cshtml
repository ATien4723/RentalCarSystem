@using Newtonsoft.Json
@using Microsoft.AspNetCore.Http
@{
    var userString = Context.Session.GetString("User");

    User user = null;
    bool isUserLoggedIn = false;
    if (!string.IsNullOrEmpty(userString))
    {
        user = JsonConvert.DeserializeObject<User>(userString);
        isUserLoggedIn = true;
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rent a Car</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
          integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" data-purpose="Layout StyleSheet" title="Web Awesome"
          href="/css/app-wa-d53d10572a0e0d37cb8d614a3f177a0c.css?vsn=d">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/all.css">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/sharp-thin.css">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/sharp-solid.css">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/sharp-regular.css">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/sharp-light.css">


    <style>
        body {
            background-color: #edf0f4;
            font-family: Arial, sans-serif;
            padding-top: 60px;
        }

        .sidebar {
            height: 100vh;
            background-color: white;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 80px;
            overflow-y: auto;
        }

        .main-content {
            padding: 20px;
        }

        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: relative;
        }

            .card img {
                border-top-left-radius: 10px;
                border-top-right-radius: 10px;
                height: 200px;
                /* Chiều cao cố định cho ảnh */
                object-fit: cover;
                /* Đảm bảo ảnh bao phủ toàn bộ khung */
            }

        .card-title {
            font-size: 1rem;
            font-weight: bold;
        }

        .card-text {
            font-size: 0.9rem;
        }


        .card-img-top {
            height: 200px;
            object-fit: cover;
        }

        .card-body .details {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
            margin-bottom: 1rem;
        }

            .card-body .details p {
                margin-bottom: 0;
                display: flex;
                align-items: center;
                gap: 5px;
            }

        .card-body .price {
            font-size: 1.25rem;
            color: red;
            font-weight: bold;
            border-top: solid 1px;
            text-align: center;
        }

        .card-body {
            margin-bottom: -20px;
        }


        .form-check-input:checked {
            background-color: #ff4757;
            border-color: #ff4757;
        }

        .form-check-input:focus {
            box-shadow: none;
        }

        .heart-icon {
            color: #ff4757;
        }

        header {
            background-color: white;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
        }

        .top-bar input {
            width: 300px;
        }

        .filters label {
            font-weight: bold;
        }

        .details-label {
            font-weight: bold;
        }

        .details-input {
            background-color: #f5f5f5;
        }

        .details-item {
            margin-bottom: 10px;
        }

        .filters .form-check-label img {
            width: 30px;
            height: 30px;
        }

        .filters .form-check {
            margin-bottom: 10px;
        }

        .filters .d-flex .form-check {
            flex: 1 1 25%;
        }

        .details-item .form-control {
            border: none;
            border-radius: 5px;
        }

            .details-item .form-control:focus {
                box-shadow: none;
            }

        .card .btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: white;
            border: none;
            padding: 5px;
        }

            .card .btn:hover {
                background: white;
            }

        .bi-heart {
            font-size: 1.2rem;
        }

            .bi-heart.heart-icon {
                color: #ff4757;
            }

        .icon {
            font-size: 20px;
        }

        .form-check {
            margin-right: 10px;
        }

            .form-check img {
                cursor: pointer;
            }

        .brand-list {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            max-height: 300px;
            overflow-y: auto;
        }

        .brand-item {
            cursor: pointer;
            text-align: center;
        }

            .brand-item img {
                width: 100%;
                height: auto;
                border-radius: 8px;
                border: 2px solid transparent;
                transition: border-color 0.3s ease;
            }

        .brand-label {
            margin-top: 5px;
            font-size: 14px;
        }

        .brand-item.selected img {
            border-color: blue;
        }
    </style>
</head>

<body>
    <header class="d-flex justify-content-between align-items-center">
        <h3 class="mb-0">Rental <span class="text-danger">Cars</span></h3>
        <div class="top-bar d-flex align-items-center">
            <div class="dropdown">
                @if (isUserLoggedIn)
                {
                    <a class="d-flex align-items-center text-decoration-none dropdown-toggle text-black" href="#"
                       id="profileDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <img src="https://via.placeholder.com/30" alt="Profile" class="rounded-circle me-2">
                        Welcome, @user?.Name
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="profileDropdown" aria-expanded="false">
                        <li><a class="dropdown-item" asp-controller="Users" asp-action="Edit" asp-route-id="@user.UserId">My Profile</a></li>
                        <li><a class="dropdown-item" href="~/Booking/ViewBookingList">My Bookings</a></li>
                        <li><a class="dropdown-item" asp-controller="Payment" asp-action="MyWallet" asp-route-userId="@user.UserId">My Wallet</a></li>
                        <li><a class="dropdown-item" asp-controller="Home" asp-action="GetUserFeedbacks" asp-route-userId="@user.UserId">My Report</a></li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#logoutModal">Logout</a></li>
                    </ul>
                }
                else
                {
                    <a class="d-flex align-items-center text-decoration-none dropdown-toggle text-black" href="#"
                       id="profileDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <img src="https://via.placeholder.com/30" alt="Profile" class="rounded-circle me-2">
                        Guest
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="profileDropdown" aria-expanded="false">
                        <li><a class="dropdown-item" asp-controller="Users" asp-action="Login">Login</a></li>

                    </ul>
                }

            </div>
        </div>
    </header>
    <div class="">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <form id="logoutForm" asp-controller="Users" asp-action="Logout" method="post" style="display: none;">
        <input type="hidden" name="returnUrl" value="~/">
    </form>
    <div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header modal-header-center">
                    <h5 class="modal-title" id="logoutModalLabel">Log Out</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body modal-body-center">
                    Are you sure you want to log out?
                </div>
                <div class="modal-footer">
                    <div class="d-flex w-100 justify-content-center align-items-center">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <div class="vr mx-3"></div>
                        <button type="button" class="btn btn-primary" onclick="submitLogout()">OK</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>

        function toggleSelection(element) {
            element.classList.toggle('selected');
        }
        $(document).ready(function () {
        });

        $(document).ready(function () {
            function performSearch() {
                var selectedBrands = [];
                $(".brandNameCheckbox:checked").each(function () {
                    selectedBrands.push($(this).val());
                });


                var selectedSeats = [];
                $(".seatsCheckbox:checked").each(function () {
                    selectedSeats.push($(this).val());
                });

                var selectedTransmissions = [];
                $(".transmissionCheckbox:checked").each(function () {
                    selectedTransmissions.push($(this).val() === "true");
                });

                var selectedFuel = [];
                $(".fuleTypeCheckbox:checked").each(function () {
                    selectedFuel.push($(this).val() === "true");
                });

               

                console.log("Selected trasss:", selectedTransmissions);  // Debug log
                console.log("Selected trasss:", selectedFuel);

                $.ajax({
                    url: "/Home/SearchCar",
                    type: "GET",
                    traditional: true,
                    data: {
                        brandNames: selectedBrands,
                        seats: selectedSeats,
                        transmissionTypes: selectedTransmissions,
                        fuelTypes: selectedFuel
                    },
                    success: function (data) {
                      //  console.log("Data Received:", data); 
                        $("#carResults").html(data);
                    },
                    error: function (error) {
                        console.log("Error performing search: " + error);
                    }
                });
            }

            $(".brandNameCheckbox, .seatsCheckbox, .transmissionCheckbox, .fuleTypeCheckbox").change(function (event) {
                event.preventDefault();
                performSearch();
            });

        });

        // function performBrandSearch(brandNames) {
        //     $.ajax({
        //         url: "/Home/SearchCar",
        //         type: "POST",
        //         traditional: true,
        //         data: {
        //             brandNames: brandNames
        //         },
        //         success: function (data) {
        //             $("#carResults").html(data);
        //         },
        //         error: function (error) {
        //             console.log("Error performing search: " + error);
        //         }
        //     });
        // }

      



            $(document).ready(function () {
                $('.priceRangeCheckbox').change(function () {
                    var form = $('#priceRangeForm');
                    $.ajax({
                    url: "/Home/SearchCar",
                    type: "POST",
                        data: form.serialize(),
                        success: function (result) {
                        $('#carResults').html(result);
                        },
                        error: function () {
                            alert('Error occurred while fetching data.');
                        }
                    });
                });
            });


        function fetchSuggestions(query, inputId) {
            fetch('/Home/GetSuggestions?query=' + encodeURIComponent(query))
                .then(response => response.json())
                .then(data => {
                    let suggestions = data.map(item => `<option value="${item}">`).join('');
                    document.getElementById(inputId + "Suggestions").innerHTML = suggestions;
                })
                .catch(error => console.error('Error fetching suggestions:', error));
        }

        function handleSelection(event) {
            let selectedAddress = event.target.value;
            if (selectedAddress.trim() === "") {
                resetCarList();
            } else {
                searchCars(selectedAddress);
            }
        }

        function resetLocationInput(inputId) {
            document.getElementById(inputId).value = '';
            document.getElementById(inputId + "Suggestions").innerHTML = '';
            searchAllCars();
        }

        function resetCarList() {
            document.getElementById('carResults').innerHTML = '';
        }

        function searchAllCars() {
            fetch('/Home/SearchCar')
                .then(response => response.text())
                .then(html => {
                    document.getElementById('carResults').innerHTML = html;
                })
                .catch(error => console.error('Error searching all cars:', error));
        }

        function searchCars(address) {
            fetch('/Home/SearchCar?address=' + encodeURIComponent(address))
                .then(response => response.text())
                .then(html => {
                    document.getElementById('carResults').innerHTML = html;
                })
                .catch(error => console.error('Error searching cars:', error));
        }

        function toggleSelection(element) {
            element.classList.toggle('selected');
        }
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const pickupDateInput = document.getElementById("pickupDateInput");
            const pickupTimeInput = document.getElementById("pickupTimeInput");
            const dropDateInput = document.getElementById("dropDateInput");
            const dropTimeInput = document.getElementById("dropTimeInput");

            function getCurrentDateTime() {
                const now = new Date();
                return {
                    date: now.toISOString().split('T')[0],
                    time: now.toTimeString().split(' ')[0].substring(0, 5)
                };
            }

            function validatePickupDateTime() {
                const currentDateTime = new Date();
                const pickupDateTime = new Date(`${pickupDateInput.value}T${pickupTimeInput.value}`);

                if (pickupDateTime < currentDateTime) {
                    alert("Pickup date and time must be equal to or greater than the current date and time.");
                    return false;
                }
                return true;
            }

            function validateDropoffDateTime() {
                const pickupDateTime = new Date(`${pickupDateInput.value}T${pickupTimeInput.value}`);
                const dropDateTime = new Date(`${dropDateInput.value}T${dropTimeInput.value}`);

                // Nếu pickup date và drop off date bằng nhau
                if (dropDateInput.value === pickupDateInput.value) {
                    if (dropDateTime <= pickupDateTime) {
                        alert("Drop-off time must be greater than the pickup time on the same day.");
                        let adjustedDropoffDateTime = new Date(pickupDateTime);
                        adjustedDropoffDateTime.setHours(adjustedDropoffDateTime.getHours() + 1); 
                        dropTimeInput.value = adjustedDropoffDateTime.toTimeString().split(' ')[0].substring(0, 5);
                        return false;
                    }
                } else {
                    // Kiểm tra nếu drop off time nhỏ hơn pickup time
                    if (dropDateTime <= pickupDateTime) {
                        alert("Drop-off date and time must be greater than the pickup date and time.");
                        let adjustedDropoffDateTime = new Date(pickupDateTime);
                        adjustedDropoffDateTime.setHours(adjustedDropoffDateTime.getHours() + 1);
                        dropDateInput.value = adjustedDropoffDateTime.toISOString().split('T')[0];
                        dropTimeInput.value = adjustedDropoffDateTime.toTimeString().split(' ')[0].substring(0, 5);
                        return false;
                    }
                }
                return true;
            }

            function updateDropoffMin() {
                const pickupDate = pickupDateInput.value;
                const pickupTime = pickupTimeInput.value;

                if (pickupDate && pickupTime) {
                    const pickupDateTime = new Date(`${pickupDate}T${pickupTime}`);
                    dropDateInput.setAttribute('min', pickupDateTime.toISOString().split('T')[0]);
                    dropTimeInput.setAttribute('min', pickupDateTime.toTimeString().split(' ')[0].substring(0, 5));
                }
            }

            updateDropoffMin();

            pickupDateInput.addEventListener("change", function () {
                if (validatePickupDateTime()) {
                    updateDropoffMin();
                    validateDropoffDateTime();
                } else {
                    const currentDateTimeStr = getCurrentDateTime();
                    pickupDateInput.value = currentDateTimeStr.date;
                    pickupTimeInput.value = currentDateTimeStr.time;
                }
            });

            pickupTimeInput.addEventListener("change", function () {
                if (validatePickupDateTime()) {
                    updateDropoffMin();
                    validateDropoffDateTime();
                } else {
                    const currentDateTimeStr = getCurrentDateTime();
                    pickupDateInput.value = currentDateTimeStr.date;
                    pickupTimeInput.value = currentDateTimeStr.time;
                }
            });

            dropDateInput.addEventListener("change", function () {
                validateDropoffDateTime();
            });

            dropTimeInput.addEventListener("change", function () {
                validateDropoffDateTime();
            });
        });
    </script>







    <script>
        function navigateToCarDetails(carId) {
            var location = document.getElementById('pickupLocation').value;
            var pickupDate = document.getElementById('pickupDateInput').value;
            var pickupTime = document.getElementById('pickupTimeInput').value;
            var dropDate = document.getElementById('dropDateInput').value;
            var dropTime = document.getElementById('dropTimeInput').value;

            var startDate = pickupDate + 'T' + pickupTime;
            var endDate = dropDate + 'T' + dropTime;

            var url = '@Url.Action("ViewCarDetailsByCustomer", "Car")'
                + '?CarId=' + carId
                + '&location=' + encodeURIComponent(location)
                + '&startDate=' + encodeURIComponent(startDate)
                + '&endDate=' + encodeURIComponent(endDate);

            window.location.href = url;
        }
    </script>


    <script>
        function submitLogout() {
            document.getElementById('logoutForm').submit();
        }
    </script>
</body>


</html>
