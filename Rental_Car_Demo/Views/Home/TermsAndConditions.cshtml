@model Rental_Car_Demo.ViewModel.RegisterAndLoginViewModel;
@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Terms</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
          integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
</head>

<style>
    /* Image Section */
    .image-section {
        position: relative;
        text-align: center;
        color: white;
        overflow: hidden;
        border-radius: 12px;
        margin: 20px auto;
        width: 100%;
        max-width: 1500px;
    }

        .image-section img {
            width: 100%;
            height: auto;
            border-radius: 12px;
        }

    .image-text {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 2.5rem;
        font-weight: bold;
        white-space: nowrap;
    }

    .alert {
        background-color: #ffe6cc;
        color: #333;
        border-radius: 8px;
    }

    .nav-tabs .nav-item.show .nav-link,
    .nav-tabs .nav-link.active {
        background-color: #28a745;
        color: white;
    }

    .nav-tabs .nav-link {
        border: 1px solid transparent;
        border-radius: 0;
        color: #28a745;
    }

        .nav-tabs .nav-link:hover {
            background-color: #f8f9fa;
            border-color: #28a745;
        }

    h1 {
        color: #333;
        font-weight: bold;
    }

    p {
        color: #666;
    }
</style>

<body>

    <!-- Image Section -->
    <div class="image-section">
        <img src="~/img/banner.png" alt="Car Steering Wheel" class="img-fluid">
        <div class="image-text">
            <h1 style="color: white;">Policies & Regulations
            </h1>
        </div>
    </div>

    <!-- Notification Section -->
    <div class="container mt-4">
        <div class="alert alert-warning text-center">
            <strong> Notification </strong><br>
            Meta will not implement the applicable Electric Vehicle Policy to ensure regulatory compliance
            new by the Government of Vietnam...
        </div>
    </div>

    <!-- Tabbed Content Section -->
    <div class="container mt-5">
    <div class="row">
    <!-- Sidebar Tabs -->
    <div class="col-md-3">
        <ul class="nav nav-tabs flex-column" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <a class="nav-link active" id="home-tab" data-bs-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Home</a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="principle-tab" data-bs-toggle="tab" href="#principle" role="tab" aria-controls="principle" aria-selected="false">Principle</a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="privacy-tab" data-bs-toggle="tab" href="#privacy" role="tab" aria-controls="privacy" aria-selected="false">Privacy</a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="dispute-tab" data-bs-toggle="tab" href="#dispute" role="tab" aria-controls="dispute" aria-selected="false">Dispute</a>
            </li>
        </ul>
    </div>

    <!-- Tab Content -->
   <div class="col-md-9">
  <div class="tab-content" id="myTabContent">
    <!-- Tab 1 -->
    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
      <h2>1. Responsibilities of Car Renters and Car Owners in Self-Driving Car Rental Transactions</h2>
      <p>
        Mioto's long-term goal is to build a civilized and reputable car-sharing community in Vietnam. To ensure that car rental transactions within the community occur smoothly and successfully, it is essential to define the responsibilities of both parties in adhering to Mioto's policies and commitments.
      </p>
      <h3>A. Responsibilities of Car Owners</h3>
      <ul>
        <li>
          Provide the car and all related documents on time and in a safe, clean condition to ensure service quality.
        </li>
        <li>
          Relevant car documents include: car registration (notarized copy), inspection certificate, insurance (notarized copy or original).
        </li>
        <li>Be legally responsible for the origin and ownership of the car.</li>
      </ul>

      <h3>B. Responsibilities of Car Renters</h3>
      <ul>
        <li>
          Carefully inspect the car before receiving and before returning it. Confirm the handover report regarding the car's condition when receiving and returning it.
        </li>
        <li>Pay the full rental fee to the Car Owner upon receiving the car.</li>
        <li>
          At the time of receiving the car, the renter must present all relevant documents to the owner:
          Driving License (owner verifies the original with the Driving License information validated on the Mioto app & registered phone number), ID Card or Passport (owner verifies the original with the information received on VNEDL & returns it), or Passport (original kept). Deposit in cash (15 million VND or as agreed with the car owner) or a motorcycle equivalent in value (15 million VND, excluding electric vehicles) when receiving the car.
          <ul>
            <li>
              <em>For cases where the car owner supports a no-collateral policy:</em> Renters do not need to leave collateral (motorcycle or 15 million VND cash) when renting a car from the owner. If additional costs arise (if any) during the rental, the renter should pay directly to the owner when returning the car.
            </li>
          </ul>
        </li>
      </ul>
    </div>
    <!-- Tab 2 -->
    <div class="tab-pane fade" id="principle" role="tabpanel" aria-labelledby="principle-tab">
      <h1 class="mb-5">General Principles</h1>
      <h2>Responsibility and Honesty</h2>
      <p>
        Mioto aims to build a car rental community with the goal of providing convenience for renters and car owners. Therefore, renters should be responsible for maintaining the rental car and treating it as if it were their own. If any issues or incidents arise with the car during your trip, address them with the car owner honestly and responsibly.
      </p>
      <h2>Build Trust</h2>
      <p>
        Car owners should create a clear and transparent profile on the Mioto app, including personal images, name, contact information, and a detailed description with high-quality photos to make the car appealing. This will help renters trust you, increasing the likelihood of renting your car.
        You can check the renter's profile online before deciding to rent, which will help you feel more secure before handing over the car keys to your guests.
      </p>
      <h2>Keep the Car Clean</h2>
      <p>
        Mioto aims to build a civilized community, so please value and maintain cleanliness of the cars you rent. Returning and receiving clean cars will help both parties conclude the transaction smoothly and be ready for future transactions.
      </p>
      <h2>Report Issues Immediately</h2>
      <p>
        Whenever an issue arises during the car rental process, both car owners and renters should inform each other immediately and use the terms of the rental agreement or Mioto's policies posted on the Mioto.vn website to resolve the issue quickly.
      </p>
      <h2>Comply with the Law</h2>
      <p>
        Car owners are responsible for ensuring that their car has all legal documents and is in a SAFE condition before handing it over to the renter.
        Renters are responsible for adhering strictly to traffic laws and all current legal regulations during the rental period.
      </p>
      <h2>Finally...</h2>
      <p>
        If the car owner and renter cannot resolve disputes themselves, contact Mioto's Customer Service department. We are here to help you resolve issues in the best possible way, adhering to the terms, policies, and operational rules both parties have committed to with Mioto.
      </p>
    </div>
    <!-- Tab 3 -->
    <div class="tab-pane fade" id="privacy" role="tabpanel" aria-labelledby="privacy-tab">
      <h1>Privacy Policy</h1>
      <p>
        Car Rental is an e-commerce trading platform ("E-Commerce Platform") registered with the Ministry of Industry and Trade.
        Users on the platform include sellers (car owners), buyers (renters), and other parties using our services.
        <br>
        "Personal Data" means data, whether accurate or not, about an individual that can be used to identify that individual, or from which the data and other information an organization has or can access. Common examples of personal data may include name, ID number, tax code, driving license, and contact information.
        <br>
        This Privacy Policy ("Privacy Policy" or "Policy") is designed to help you understand how we collect, use, disclose, and/or process personal data that you have provided to us and/or that we hold about you, whether now or in the future, as well as to help you make an informed decision before providing us with any personal data.
        <br>
        By using our Services, registering an account with us, or accessing the Platform, you acknowledge and agree that you accept the practices, requirements, and/or policies described in this Privacy Policy, and hereby consent to our collection, use, disclosure, and/or processing of your personal data as described herein. This consent will be effective and commence from the time you consent until you decide to withdraw your consent or automatically terminate under the provisions of the law.
        <br>
        If you do not consent to the processing of your data as set forth, please do not use our services or access our platform, or notify us immediately if you have previously consented.
        <br>
        If there are any changes to our Privacy Policy, we will notify you, including by posting such changes or the revised Privacy Policy on our Platform. To the extent permitted by law, your continued use of the Services or Platform, including your transactions, constitutes your acceptance of and agreement to the changes in this Privacy Policy.
        <br>
        This policy applies in conjunction with any notices, contract terms, or other acceptance terms related to our collection, storage, use, disclosure, and/or processing of your personal data, and is not intended to override those notices or terms unless we explicitly state otherwise.
        <br>
        This policy applies to all users of the Services/Platform unless explicitly stated otherwise.
      </p>
    </div>
    <!-- Tab 4 -->
    <div class="tab-pane fade" id="dispute" role="tabpanel" aria-labelledby="dispute-tab">
      <h1>Complaint Resolution Process</h1>
      <p>
        The company and Car Owners are responsible for receiving complaints and supporting Customers regarding transactions connected through the Platform. Complaints related to providing or using car rental services on the Platform are independently resolved by the company based on legal regulations, Terms and Conditions of service use, and announcements and regulations published to Members (Customers and Car Owners). When disputes arise, the company prioritizes negotiation and mediation between the parties to maintain members' trust in the quality of the Platform's services. Customers can follow these steps:
        <br>
        Step 1: Customers should file a complaint about the service via phone at 1900 9217 or email the Customer Service Department at support@car.vn. The company will accept complaints within 3 days from the date of service use or the occurrence of the event.
        <br>
        Step 2: Within (3) working days from receiving the customer's complaint information, the Customer Service Department will confirm the complaint information, classify the information, and notify the Customer:
        2a. Record requests and complaints related to the company and within the complaint period.
        2b. Reject requests and complaints not related to the company and outside the complaint period.
        <br>
        Step 3: Resolve the issue
        The Customer Service Department will verify, check, and analyze the nature and extent of the complaint, the scope of the complaint, and the responsibility for handling it to coordinate with Car Owners and third-party service providers to come up with specific measures to assist the Customer in resolving the dispute.
        3a. Transfer issues directly related to the company to relevant departments for inspection and verification.
        3b. Transfer issues to Car Owners for resolution.
        Within three (3) working days from receiving the complaint notification, Car Owners are responsible for cooperating with Mioto to resolve and address the complaint. Car Owners will inform the Customer of the resolution or authorize the company to notify the Customer.
        <br>
        Step 4: Close the complaint
        4a. Customer agrees with the responses from the Customer Service Department -> End the complaint resolution process.
        4b. Customer does not agree with the responses from the Customer Service Department -> The company will review and inform the Customer of the final response.
        <br>
        In the case of not resolving the complaint through the above process, the Customer has the right to ask the company to refer the dispute to a third party for mediation or arbitration as appropriate, under the law. The customer will be responsible for all related costs (if any).
        <br>
        The company reserves the right to terminate or suspend the complaint resolution process in cases where the Customer's complaint is not truthful or without basis.
      </p>
    </div>
  </div>
</div>

    </div>


  
    @{
        var showModal = TempData["ShowModal"] as string;
    }


    <div class="modal fade" id="authModal" tabindex="-1" role="dialog" aria-labelledby="authModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-body p-0">
                    <div class="container-login" id="container">
                        <div class="body-login">
                            <div class="form-container sign-up">
                                <form asp-controller="Users" asp-action="Register" method="post" asp-antiforgery="true" data-val="true">
                                    <div class="mb-3">
                                        <label asp-for="Register.Name" class="form-label">Your name</label>
                                        <input asp-for="Register.Name" type="text" class="form-control" id="signupName" placeholder="Your name">
                                        <span asp-validation-for="Register.Name" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label asp-for="Register.Email" class="form-label">Your email address</label>
                                        <input asp-for="Register.Email" type="email" class="form-control" id="signupEmail" placeholder="Your email address">
                                        <span asp-validation-for="Register.Email" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3 position-relative">
                                        <label asp-for="Register.Password" class="form-label">Pick a password</label>
                                        <input asp-for="Register.Password" type="password" class="form-control" autocomplete="off" id="signupPassword" placeholder="Pick a password">
                                        <i class='bx bx-low-vision toggle-password2' id="toggleSignupPassword"></i>
                                        <small class="form-text text-muted">
                                            Use at least one letter, one number, and seven
                                            characters.
                                        </small>
                                        <span asp-validation-for="Register.Password" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3 position-relative">
                                        <label asp-for="Register.ConfirmPassword" class="form-label">Confirm password</label>
                                        <input asp-for="Register.ConfirmPassword" type="password" class="form-control" id="signupConfirmPassword"
                                               placeholder="Confirm password">
                                        <i class='bx bx-low-vision toggle-password' id="toggleSignupConfirmPassword"></i>
                                        <span asp-validation-for="Register.ConfirmPassword" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="Register.Phone" class="form-label">Your phone number</label>
                                        <input asp-for="Register.Phone" class="form-control" id="signupPhone" placeholder="Your phone number">
                                        <span asp-validation-for="Register.Phone" class="text-danger"></span>
                                    </div>

                                    <div class="d-flex align-items-center">
                                        <div class="form-check mb-3">
                                            <input asp-for="Register.Role" class="form-check" type="radio" value="rentCar" id="rentCar" style="width: 16px;" checked>
                                            <label class="form-check-label" for="rentCar">
                                                I want to rent a car
                                            </label>
                                        </div>
                                        <div class="form-check mb-3 ps-5">
                                            <input asp-for="Register.Role" class="form-check" type="radio" value="carOwner" id="carOwner" style="width: 16px;">
                                            <label class="form-check-label" for="carOwner">
                                                I am a car owner
                                            </label>
                                        </div>
                                    </div>
                                    <span asp-validation-for="Register.Role" class="text-danger"></span>

                                    <div class="mb-3 d-flex">
                                        <input asp-for="Register.AgreeToTerms" class="" type="checkbox" id="terms" style="width: 16px;">
                                        <label asp-for="Register.AgreeToTerms" class="form-check-label" for="terms">
                                            I have read and agree with the <a href="@Url.Action("TermsAndConditions", "Home")" target="_blank" class="text-decoration-none ps-3">
                                                <u>
                                                    Terms and
                                                    Conditions
                                                </u>
                                            </a>
                                        </label>
                                        <span asp-validation-for="Register.AgreeToTerms" class="text-danger"></span>
                                    </div>

                                    <button type="submit" class="btn btn-custom w-100 far fa-user fa-plus"> SIGN UP</button>
                                </form>
                            </div>

                            <div class="form-container sign-in">
                                @using (Html.BeginForm("Login", "Users", FormMethod.Post, new { id = "loginForm" }))
                                {
                                    <h1>Sign In</h1>
                                    <div class="mb-3">
                                        <label for="loginEmail" class="form-label">Your email address</label>
                                        @Html.TextBoxFor(x => x.User.Email, new { @class = "form-control", placeholder = "Your email address", id = "loginEmail" })
                                        <span class="text-danger" id="loginEmailError"></span>
                                    </div>
                                    <div class="position-relative">
                                        <div class="abccc" style="position:relative;">
                                            <label for="loginPassword" class="form-label">Password</label>
                                            @Html.TextBoxFor(x => x.User.Password, new { @class = "form-control", type = "password", placeholder = "Password", id = "loginPassword" })
                                            <span class="text-danger" id="loginPasswordError"></span>
                                            <i class="bx bx-low-vision toggle-password3" style="position:relative" id="toggleLoginPassword"></i>
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(ViewBag.Error))
                                    {
                                        <div class="text-danger" id="serverError">@ViewBag.Error</div>
                                    }
                                    <div class="mb-3 form-check" style="padding-left: 0.5em;">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.User.RememberMe, new { @class = "form-check-input", id = "rememberMe" })
                                            <label class="form-check-label" for="rememberMe">
                                                @Html.DisplayNameFor(x => x.User.RememberMe)
                                            </label>
                                        </div>
                                    </div>

                                    <div class="mb-3 d-flex justify-content-center">
                                        <a asp-controller="Users" asp-action="ResetPassword">Forgot your password?</a>
                                    </div>


                                    <button type="submit">Sign In</button>
                                }
                            </div>
                        
                            <div class="toggle-container">
                                <div class="toggle">
                                    <div class="toggle-panel toggle-left">
                                        <h1>Welcome Back!</h1>
                                        <p>Enter your personal details to use all of the site's features</p>
                                        <button class="hidden" id="login">Sign In</button>
                                    </div>
                                    <div class="toggle-panel toggle-right">
                                        <h1>Hello, Friend!</h1>
                                        <p>Register with your personal details to use all of the site's features</p>
                                        <button class="hidden" id="register">Sign Up</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>


    <script>
        $(document).ready(function() {
    $('#authModal').on('shown.bs.modal', function () {
        console.log('Modal đã được hiển thị.');
    });

    $('#authModal').on('hide.bs.modal', function () {
        console.log('Modal đã được đóng.');
    });
});

   $('#loginForm').submit(function(event) {
    if ($('#rememberMe').is(':checked')) {
        localStorage.setItem('rememberEmail', $('#loginEmail').val());
        localStorage.setItem('rememberPassword', $('#loginPassword').val());
    } else {
        localStorage.removeItem('rememberEmail');
        localStorage.removeItem('rememberPassword');
    }
});

$(document).ready(function() {
    if (localStorage.getItem('rememberEmail')) {
        $('#loginEmail').val(localStorage.getItem('rememberEmail'));
    }
    if (localStorage.getItem('rememberPassword')) {
        $('#loginPassword').val(localStorage.getItem('rememberPassword'));
    }
});

        // Toggle password visibility
        function togglePasswordVisibility(inputId, toggleId) {
            const passwordInput = document.getElementById(inputId);
            const toggleIcon = document.getElementById(toggleId);

            toggleIcon.addEventListener('click', () => {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);

                if (type === 'text') {
                    toggleIcon.classList.remove('bx-low-vision');
                    toggleIcon.classList.add('bx-show');
                } else {
                    toggleIcon.classList.remove('bx-show');
                    toggleIcon.classList.add('bx-low-vision');
                }
            });
        }

        togglePasswordVisibility('signupPassword', 'toggleSignupPassword');
        togglePasswordVisibility('loginPassword', 'toggleLoginPassword');
        togglePasswordVisibility('signupConfirmPassword', 'toggleSignupConfirmPassword');

        const container = document.getElementById('container');
        const registerBtn = document.getElementById('register');
        const loginBtn = document.getElementById('login');

        registerBtn.addEventListener('click', () => {
            container.classList.add("active");
        });

        loginBtn.addEventListener('click', () => {
            container.classList.remove("active");
        });

        document.querySelectorAll('input[type="radio"]').forEach(radio => {
            radio.addEventListener('click', function () {
                if (this.previousChecked) {
                    this.checked = false;
                }
                document.querySelectorAll('input[type="radio"]').forEach(radio => radio.previousChecked = false);
                this.previousChecked = this.checked;
            });
        });
    </script>
</body>

</html>