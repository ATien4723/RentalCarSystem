@{
    ViewData["Title"] = "MyWallet";
    Layout = "~/Views/Shared/_LayoutWallet.cshtml";
}
@{
    string walletFormatted = Model.User.Wallet?.ToString("N0");
}
@using Rental_Car_Demo.ViewModel
@model UserWalletViewModel


<body>
    <div class="container-fluid mt-2">
        <div style="padding-left:10px">
            @if (Model.User.Role==false)
            {
                <a asp-controller="Users" asp-action="LoginCus" class="text">Home</a>
            }
            else
            {
                <a asp-controller="Users" asp-action="LoginOwn" class="text">Home</a>
            }
             >
            <a href="#" class="text-decoration-none">My Wallet</a>
        </div>
        <h3 class="text mt-2">My Wallet</h3>
        <div class="row">
            <div class="col-md-6">
                <div class="balance-card">
                    <h3>Your current balance:</h3>
                    <div class="balance-details">
                        <i class="fa-light fa-square-dollar right-icon"></i>
                        <h1>@walletFormatted VND</h1>
                    </div>
                    @if (Model.User.Wallet < 0)
                    {
                        <span class="text-danger"><strong>You are out of money. Please top-up to continue.</strong></span>
                    }
                    <div class="buttonkk">
                        <button class="btn btn-success mx-2" data-bs-toggle="modal" data-bs-target="#topUpModal">
                            <i class="fa-sharp fa-regular fa-money-bill-transfer"></i>
                            Top-up
                        </button>
                        <button class="btn btn-warning mx-2" data-bs-toggle="modal" data-bs-target="#withdrawModal">
                            <i class="fa-sharp fa-solid fa-money-from-bracket"></i>
                            Withdraw
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="promo-card">
                    <div class="promo-content">
                        <button class="btn btn-warning mx-2" data-bs-toggle="modal" data-bs-target="#topUpModal">Top-up now! </button>
                    </div>
                    <img src="~/img/kkk.png" alt="Birthday Image" class="promo-bg">
                </div>
            </div>
        </div>
        <div class="modal fade" id="withdrawModal" tabindex="-1" aria-labelledby="withdrawModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="withdrawModalLabel">Withdraw</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Your current balance is @walletFormatted VND. Please select the amount to withdraw from your wallet.</p>
                        <select class="form-select" id="withdrawAmount">
                            <option value="2000000">2,000,000</option>
                            <option value="5000000">5,000,000</option>
                            <option value="10000000">10,000,000</option>
                            <option value="@Model.User.Wallet">All balance</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="withdrawOkBtn">OK</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="topUpModal" tabindex="-1" aria-labelledby="topUpModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="topUpModalLabel">Top-up</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Your current balance is @walletFormatted VND. Please select the amount to top-up to your wallet.</p>
                        <select class="form-select" id="topUpAmount">
                            <option value="2000000">2,000,000</option>
                            <option value="5000000">5,000,000</option>
                            <option value="10000000">10,000,000</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="topUpOkBtn">OK</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Error Modal -->
        <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="errorModalLabel">Error</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p id="errorMessage"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <form id="transactionForm" asp-controller="Payment" asp-action="SearchTransactions" asp-route-userId="@Model.User.UserId" method="post">
            <div class="mt-4">
                <h4>All Transactions</h4>
                <div class="row mb-3">
                    <div class="col-md-4">
                        <div class="form-group row">
                            <label for="from" class="col-sm-2 col-form-label">From</label>
                            <div class="col-sm-9">
                                <input type="date" class="form-control" id="from" name="from" value="@ViewBag.From?.ToString("yyyy-MM-dd")">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group row">
                            <label for="to" class="col-sm-2 col-form-label" style="padding-left: 45px;">To</label>
                            <div class="col-sm-9">
                                <input type="date" class="form-control" id="to" name="to" value="@ViewBag.To?.ToString("yyyy-MM-dd")">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 align-self-end">
                        <div class="form-group row">
                            <div class="col-sm-12">
                                <button class="btn btn-primary btn-block" style="width: 30%;">
                                        Search
                                    </button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
    @*     <div class="my-4">
            <h5>Transactions</h5>
            <div class="row">
                <div class="col-md-5">
                    <label for="from">From</label>
                        <input type="date" class="form-control" id="from" name="from" value="@ViewBag.From?.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-5">
                    <label for="to">To</label>
                        <input type="date" class="form-control" id="to" name="to" value="@ViewBag.To?.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-2 align-self-end">
                    <button class="btn btn-primary" type="submit">Search</button>
                </div>
            </div>
        </div> *@
        </form>
        <div class="table-responsive my-4">
            @if (Model.Wallets.Count == 0)
            {
                <p><strong>No transactions available</strong></p>
            }
            else
            {
                <table id="listingContainer" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>Amount</th>
                            <th>Type</th>
                            <th>Date time</th>
                            <th>Booking No.</th>
                            <th>Car Name</th>
                            <th>Note</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var wallet in Model.Wallets)
                        {
                            <tr class="listingItem">
                                <td>@wallet.WalletId</td>
                                <td class="@(wallet.Amount.Contains("-") ? "text-danger" : "text-success")">
                                    @(wallet.Amount.StartsWith("-") ? "-" : (wallet.Amount.StartsWith("+") ? "+" : "+"))@decimal.Parse(wallet.Amount.TrimStart('+', '-')).ToString("N0", System.Globalization.CultureInfo.CurrentCulture) VND
                                </td>
                                <td>@wallet.Type</td>
                                <td>@wallet.CreatedAt</td>
                                @if (@wallet.BookingNo == null)
                                {
                                    <td>N/A</td>
                                }
                                else
                                {
                                    <td>@wallet.BookingNo</td>
                                }
                                @if (@wallet.CarName == null)
                                {
                                    <td>N/A</td>
                                }
                                else
                                {
                                    <td>@wallet.CarName</td>
                                }
                                @if (@wallet.Note == null)
                                {
                                    <td></td>
                                }
                                else
                                {
                                    <td>@wallet.Note</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
            
        </div>

        <div class="d-flex justify-content-end align-items-center mb-3">
            <nav aria-label="Page navigation example">
                <ul class="pagination-controls mb-0">
                    <button onclick="prevPage()" id="btn_prev">Prev</button>
                    <span id="pagination"></span>
                    <button onclick="nextPage()" id="btn_next">Next</button>
                </ul>
            </nav>
            <div class="ms-3"></div>
            <div class="items-per-page">
                <select id="selectpage" onchange="pageselect()">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                    <option value="20">20</option>
                    <option value="25">25</option>
                    <option value="30">30</option>
                </select> Per Page
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            function disableButtons() {
                $('#withdrawOkBtn').prop('disabled', true);
                $('#topUpOkBtn').prop('disabled', true);
            }

            function enableButtons() {
                $('#withdrawOkBtn').prop('disabled', false);
                $('#topUpOkBtn').prop('disabled', false);
            }

            $('#withdrawOkBtn').on('click', function () {
                var amount = $('#withdrawAmount').val();
                disableButtons();
                $.post('/Payment/Withdraw', { amount: amount, userId: @Model.User.UserId }, function (response) {
                    if (response.success) {
                        $('#withdrawModal').modal('hide');
                        alert('Withdraw successful!');
                        location.reload();
                    } else {
                        alert('Withdraw failed: ' + response.error);
                        enableButtons();
                    }
                }).fail(function () {
                    alert('Withdraw failed: an error occurred.');
                    enableButtons();
                });
            });

            $('#topUpOkBtn').on('click', function () {
                var amount = $('#topUpAmount').val();
                disableButtons();
                $.post('/Payment/TopUp', { amount: amount, userId: @Model.User.UserId }, function (response) {
                    if (response.success) {
                        $('#topUpModal').modal('hide');
                        alert('Top-up successful!');
                        location.reload();
                    } else {
                        alert('Top-up failed: ' + response.error);
                        enableButtons();
                    }
                }).fail(function () {
                    alert('Top-up failed: an error occurred.');
                    enableButtons();
                });
            });

            $('#transactionForm').on('submit', function (e) {
                var from = $('#from').val();
                var to = $('#to').val();
                var errorMessage = '';

                if (!from || !to) {
                    errorMessage = 'Please select start date and end date.';
                } else if (new Date(to) < new Date(from)) {
                    errorMessage = 'The end date must be later than the start date.';
                }

                if (errorMessage) {
                    e.preventDefault();
                    $('#errorMessage').text(errorMessage);
                    $('#errorModal').modal('show');
                }
            });
        });

    </script>

    <script>
        var current_page = 1;
        var items = document.querySelectorAll('#listingContainer .listingItem');
        var pagelength = items.length;
        var item_per_page = 5; // Default items per page

        function pageselect() {
            item_per_page = parseInt(document.getElementById("selectpage").value);
            changePage(1); // Reset to the first page when items per page is changed
        }

        function prevPage() {
            if (current_page > 1) {
                current_page--;
                changePage(current_page);
            }
        }

        function nextPage() {
            if (current_page < numPages()) {
                current_page++;
                changePage(current_page);
            }
        }

        function changePage(page) {
            var btn_next = document.getElementById("btn_next");
            var btn_prev = document.getElementById("btn_prev");
            var pagination = document.getElementById("pagination");

            // Validate page
            if (page < 1) page = 1;
            if (page > numPages()) page = numPages();

            items.forEach((item, index) => {
                item.style.display = 'none'; // Reset all to not display
            });

            for (var i = (page - 1) * item_per_page; i < (page * item_per_page); i++) {
                if (items[i]) {
                    items[i].style.display = ""; // Display the current page items
                }
            }

            pagination.innerHTML = generatePagination(page);

            btn_prev.style.visibility = (page === 1) ? "hidden" : "visible";
            btn_next.style.visibility = (page === numPages()) ? "hidden" : "visible";

            current_page = page; // Update current page
        }

        function generatePagination(currentPage) {
            var html = '';
            var totalPages = numPages();

            for (var i = 1; i <= totalPages; i++) {
                if (i === currentPage) {
                    html += '<button class="pagination-num current-page" onclick="changePage(' + i + ')">' + i + '</button>';
                } else {
                    html += '<button class="pagination-num" onclick="changePage(' + i + ')">' + i + '</button>';
                }
            }

            return html;
        }

        function numPages() {
            return Math.ceil(pagelength / item_per_page);
        }

        window.onload = function () {
            // Set the dropdown to the default items per page value
            document.getElementById("selectpage").value = item_per_page;
            changePage(current_page);
        };
    </script>

</body>
</html>
