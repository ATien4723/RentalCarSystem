@model Rental_Car_Demo.Models.Car
@{
    Layout = "~/Views/Shared/_LayoutCarOwner.cshtml";
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>List Car</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="./css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
          integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

    <link rel="stylesheet" data-purpose="Layout StyleSheet" title="Web Awesome"
          href="/css/app-wa-d53d10572a0e0d37cb8d614a3f177a0c.css?vsn=d">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/all.css">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/sharp-thin.css">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/sharp-solid.css">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/sharp-regular.css">

    <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.2/css/sharp-light.css">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
        }

        .car-card {
            display: flex;
            align-items: center;
            border: 1px solid #eaeaea;
            border-radius: 8px;
            background-color: #fff;
            padding: 10px;
            margin-bottom: 1rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        .car-image-container {
            position: relative;
            width: 30%;
            overflow: hidden;
            border-radius: 8px;
        }

        .car-image {
            width: 100%;
            height: auto;
        }

        .image-count {
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: rgba(0, 0, 0, 0.6);
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 5px;
            font-size: 0.9rem;
        }

        .heart-icon {
            position: absolute;
            top: 10px;
            right: 10px;
            color: white;
            background-color: rgba(0, 0, 0, 0.6);
            padding: 5px;
            border-radius: 50%;
            font-size: 1.2rem;
        }

        .car-details {
            padding: 1rem;
            width: 70%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

            .car-details h5 {
                font-size: 1.2rem;
                font-weight: bold;
                margin-bottom: 0.5rem;
            }

            .car-details .price {
                font-size: 1.2rem;
                font-weight: bold;
                color: #000;
                margin-bottom: 0.5rem;
            }

            .car-details .specs,
            .car-details .category,
            .car-details .rating,
            .car-details .warranty {
                margin-bottom: 0.5rem;
                display: flex;
                align-items: center;
                gap: 5px;
            }

        .specs i,
        .category i,
        .rating i,
        .warranty i {
            margin-right: 5px;
        }

        .rating-stars {
            color: #ffc107;
        }

        .view-deal-btn {
            text-decoration: none;
            background-color: #3942e5;
            border: none;
            color: white;
            border-radius: 20px;
            padding: 0.5rem 1rem;
            text-align: center;
            font-size: 1rem;
            cursor: pointer;
            align-self: flex-start;
            width: 25%;
        }

        .view-deposit-btn {
            background-color: #3942e5;
            border: none;
            color: white;
            border-radius: 20px;
            padding: 0.5rem 1rem;
            text-align: center;
            font-size: 1rem;
            cursor: pointer;
            align-self: flex-start;
        }

        .view-pay-btn{
            background-color: #3942e5;
            border: none;
            color: white;
            border-radius: 20px;
            padding: 0.5rem 1rem;
            text-align: center;
            font-size: 1rem;
            cursor: pointer;
            align-self: flex-start;
        }

        .specs {
            margin-bottom: 0.5rem;
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            color: #6c757d;
        }

        .share-icon {
            position: absolute;
            top: 10px;
            right: 10px;
            color: #6c757d;
            font-size: 1.5rem;
            cursor: pointer;
        }

        .star {
            color: lightgray;
        }

        .filled {
            color: gold;
        }

        .half-filled {
            background: linear-gradient(90deg, gold 50%, lightgray 50%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <a class="link mt-5" href="~/Users/LoginOwn">Home</a> > <span>Add a car</span>

        <h2 class="mt-3" style="font-weight: bold;">List of Cars</h2>

        <div class="d-flex justify-content-between align-items-center mt-4">
            <button class="btn btn-primary" onclick="location.href='@Url.Action("AddACar", "Car")'">Add car</button>
            <form id="sortForm" method="post" asp-action="ViewMyCars">
                <select id="sortOrder" name="sortOrder" class="form-select w-auto">
                    <option value="newest">Newest to Latest</option>
                    <option value="latest">Latest to Newest</option>
                    <option value="highest">Highest to Lowest</option>
                    <option value="lowest">Lowest to Highest</option>
                </select>
            </form>
        </div>
    </div>

    <div class="row">
    </div>

    <div class="container" id="listingContainer">
        @foreach (var c in ViewBag.Cars)
        {
            <div class="car-card mt-2 listingItem">
                <div class="car-data"
                     data-car-id="@c.CarId"
                     data-average-rating="@c.AverageRating"
                     data-no-of-ride="@c.NoOfRide">
                </div>
                <!-- Preview car image -->
                <div id="demo@(c.CarId)" class="col-sm-5 carousel slide" data-bs-ride="carousel">
                    <!-- Indicators/dots -->
                    <div class="carousel-indicators">
                        <button type="button" data-bs-target="#demo@(c.CarId)" data-bs-slide-to="0" class="active"></button>
                        <button type="button" data-bs-target="#demo@(c.CarId)" data-bs-slide-to="1"></button>
                        <button type="button" data-bs-target="#demo@(c.CarId)" data-bs-slide-to="2"></button>
                        <button type="button" data-bs-target="#demo@(c.CarId)" data-bs-slide-to="3"></button>
                    </div>

                    <!-- The slideshow/carousel -->
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="~/img/@c.FrontImage"
                                 alt="Front img" style="width: 100%; height: 100%;">
                        </div>
                        <div class="carousel-item ">
                            <img src="~/img/@c.BackImage"
                                 alt="Back img" style="width: 100%; height: 100%;">
                        </div>
                        <div class="carousel-item ">
                            <img src="~/img/@c.LeftImage"
                                 alt="Left img" style="width: 100%; height: 100%;">
                        </div>
                        <div class="carousel-item ">
                            <img src="~/img/@c.RightImage"
                                 alt="Right img" style="width: 100%; height: 100%;">
                        </div>
                    </div>

                    <!-- Left and right controls/icons -->
                    <button class="carousel-control-prev" style="margin-left: -10%;" type="button" data-bs-target="#demo@(c.CarId)" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" style="margin-right: -10%;" type="button" data-bs-target="#demo@(c.CarId)" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
                <div class="col-sm-1"></div>
                <!-- Preview Details Car -->
                <div class="car-details">
                    <h5>@c.Name</h5>
                    <p class="specs">
                        <i class="fa fa-calendar-alt"></i> @c.ProductionYear
                        <i class="fa-sharp fa-solid fa-person-seat"></i> @c.Seats seats
                        <i class="fa fa-cogs"></i> @(c.TransmissionType ? "Automatic" : "Manual")
                        <i class="fa-regular fa-roller-coaster"></i> @c.NoOfRide No of ride
                        <i class="fa fa-gas-pump"></i> Diesel
                    </p>
                    <p class="price">Price: @((c.BasePrice ).ToString("N0")) VND</p>
                    <p class="category"><i class="fa-regular fa-map-location"></i>Location: @c.Address.District.DistrictName, @c.Address.City.CityProvince</p>

                    <p class="rating">
                        <i class="fa fa-star"></i>Ratings:
                        <label class="d-flex fs-4" id="rating-@c.CarId">
                            <i class="bi bi-star-fill star ms-1"></i>
                            <i class="bi bi-star-fill star ms-1"></i>
                            <i class="bi bi-star-fill star ms-1"></i>
                            <i class="bi bi-star-fill star ms-1"></i>
                            <i class="bi bi-star-fill star ms-1"></i>
                        </label>
                        @if (c.NoOfRide == 0)
                        {
                            <div class="fw-bold" style="margin-left: 18%">(No ratings yet)</div>
                        }
                        else
                        {
                            <span>(@c.AverageRating.ToString("F1"))</span>
                        }
                    </p>

                    <div class="row mt-2 fs-5">
                        <label class="col-2 fw-bold">Status:</label>
                        <label class="col-10 fw-bold">
                            @{
                                string statusText = "";
                                string statusClass = "";
                                var st = c.Status;
                                switch (c.Status)
                                {
                                    case 0:
                                        statusText = "Stopped";
                                        statusClass = "text-danger";
                                        break;
                                    case 1:
                                        statusText = "Available";
                                        statusClass = "text-success";
                                        break;
                                    case 2:
                                        statusText = "Booked";
                                        statusClass = "text-primary";
                                        break;
                                }
                            }
                            <span class="@statusClass">@statusText</span>
                        </label>
                    </div>
                    <div class="d-flex">
                        <a href="@Url.Action("ChangeCarDetailsByOwner", "Car", new { CarId = c.CarId })" class="view-deal-btn mt-2">View details</a>
                        @{

                            var confirmDeposit = ((List<Booking>)ViewBag.Bookings)
                            .FirstOrDefault(b => b.CarId == c.CarId && b.Status == 1);

                            var confirmPayment = ((List<Booking>)ViewBag.Bookings)
                            .FirstOrDefault(b => b.CarId == c.CarId && b.Status == 4);
                        }
                        @if (confirmDeposit != null)
                        {
                            <form id="confirmDepositForm" asp-action="ConfirmDeposit" asp-controller="Car" method="post">
                                <button type="button" class="view-deposit-btn ms-2 mt-2" id="confirmDepositButton">Confirm Deposit</button>
                                <input type="hidden" asp-for="CarId" value="@c.CarId" />
                            </form>
                        }
                        @if (confirmPayment != null)
                        {
                        //<form id="confirmDepositForm" asp-action="ConfirmDeposit" asp-controller="Car" method="post">
                            <button type="button" class="view-pay-btn ms-2 mt-2" id="confirmPaymentButton">Confirm Payment</button>
                            <input type="hidden" asp-for="CarId" value="@c.CarId" />
                            // </form>
                        }

                    </div>
                </div>

                

            </div>
        }
    </div>

    <div class="row">
        <div class="col-md-5"></div>
        <div class="col-md-4">
            <div class="pagination-controls">
                <button onclick="prevPage()" id="btn_prev">Prev</button>
                <span id="pagination"></span>
                <button onclick="nextPage()" id="btn_next">Next</button>
            </div>
        </div>
        <div class="col-md-2"></div>
        <div class="col-md-1">
            <select id="selectpage" onchange="pageselect()">
                <option value="10">10</option>
                <option value="15">15</option>
                <option value="20">20</option>
                <option value="25">25</option>
                <option value="30">30</option>
            </select>
        </div>
    </div>

    <script>
        var current_page = 1;
        var items = document.querySelectorAll('#listingContainer .listingItem');
        var pagelength = items.length;
        var item_per_page = 10; // Default items per page

        function pageselect() {
            item_per_page = parseInt(document.getElementById("selectpage").value);
            changePage(1); // Reset to the first page when items per page is changed
        }

        function prevPage() {
            if (current_page > 1) {
                current_page--;
                changePage(current_page);
            }
        }

        function nextPage() {
            if (current_page < numPages()) {
                current_page++;
                changePage(current_page);
            }
        }

        function changePage(page) {
            var btn_next = document.getElementById("btn_next");
            var btn_prev = document.getElementById("btn_prev");
            var pagination = document.getElementById("pagination");

            // Validate page
            if (page < 1) page = 1;
            if (page > numPages()) page = numPages();

            items.forEach((item, index) => {
                item.style.display = 'none'; // Reset all to not display
            });

            for (var i = (page - 1) * item_per_page; i < (page * item_per_page); i++) {
                if (items[i]) {
                    items[i].style.display = ""; // Display the current page items
                }
            }

            pagination.innerHTML = generatePagination(page);

            btn_prev.style.visibility = (page === 1) ? "hidden" : "visible";
            btn_next.style.visibility = (page === numPages()) ? "hidden" : "visible";

            current_page = page; // Update current page
        }

        function generatePagination(currentPage) {
            var html = '';
            var totalPages = numPages();

            for (var i = 1; i <= totalPages; i++) {
                if (i === currentPage) {
                    html += '<button class="pagination-num current" onclick="changePage(' + i + ')">' + i + '</button>';
                } else {
                    html += '<button class="pagination-num" onclick="changePage(' + i + ')">' + i + '</button>';
                }
            }

            return html;
        }

        function numPages() {
            return Math.ceil(pagelength / item_per_page);
        }

        window.onload = function () {
            // Set the dropdown to the default items per page value
            document.getElementById("selectpage").value = item_per_page;
            changePage(current_page);
        };
    </script>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var sortOrder = '@ViewBag.SortOrder';
            if (sortOrder) {
                document.getElementById("sortOrder").value = sortOrder;
            }

            document.getElementById("sortOrder").addEventListener("change", function () {
                localStorage.setItem("sortOrder", this.value);
                document.getElementById("sortForm").submit();
            });
        });
    </script>


    <!--  confirm deposit diaglog  -->
    <script>
        document.getElementById('confirmDepositButton').addEventListener('click', function (event) {
            event.preventDefault(); // Prevent the default action of the button
            if (confirm('Are you sure you want to confirm the deposit?')) {
                // Submit the form if the user confirms
                document.getElementById('confirmDepositForm').submit();
            } else {
                // Perform an action if the user cancels (optional)
                console.log('User canceled the action.');
            }
        });
    </script>

    <script>
        function setRating(rating, carId) {
            const stars = document.querySelectorAll(`#rating-${carId} .star`);
            stars.forEach((star, index) => {
                star.classList.remove('filled', 'half-filled');
                if (rating >= index + 1) {
                    star.classList.add('filled');
                } else if (rating > index && rating < index + 1) {
                    star.classList.add('half-filled');
                }
            });
        }

        // Example of passing data via HTML attributes
        document.querySelectorAll('.car-data').forEach(element => {
            const carId = element.getAttribute('data-car-id');
            const averageRating = parseFloat(element.getAttribute('data-average-rating'));
            const noOfRide = parseInt(element.getAttribute('data-no-of-ride'), 10);

            if (noOfRide > 0) {
                setRating(averageRating, carId);
            }
        });
    </script>
</body>
